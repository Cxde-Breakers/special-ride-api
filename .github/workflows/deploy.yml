name: ðŸš€ Deploy File to hPanel
on:
  push:
    branches:
      - master
jobs:
  FTP-Deploy-Action:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: ðŸ”¨ Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          yarn install
          git reset --hard

      - name: Build Application
        run: yarn build
        
      - name: ðŸ“‚ Sync folders and files to the server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21

      - name: ðŸ“‚ Run application on server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}  # Add your SSH port secret here
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
        echo "$SSH_PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key -p $SSH_PORT $SSH_USERNAME@$SSH_HOST << 'EOF'
          # Install Docker
          if ! [ -x "$(command -v docker)" ]; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo usermod -aG docker $SSH_USERNAME
          fi

          # Install Docker Compose
          if ! [ -x "$(command -v docker-compose)" ]; then
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Navigate to the project directory
          cd /home/u163133407/domains/specialride.tech/api.specialride.tech

          # Build and run Docker containers
          docker-compose build
          docker-compose up -d
        EOF
